{"version":3,"file":"static/js/532.10e284ca.chunk.js","mappings":"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","sources":["components/toast/Toast.jsx","components/movieInfo/MovieInfo.styled.js","components/movieInfo/MovieInfo.jsx","components/loader/ImageLoader.jsx","pages/MovieDetails.jsx","services/API.js","services/hooks.js","services/funcs.js"],"sourcesContent":["import { Toaster } from 'react-hot-toast';\n\nconst Message = () => {\n  return <Toaster position=\"top-center\" reverseOrder={false} />;\n};\n\nexport default Message;\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 30px;\n  padding-top: 20px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 30px;\n`;\nexport const LinkList = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const PageLink = styled(Link)`\n  width: 100px;\n  text-align: center;\n  color: black;\n  padding: 4px 8px;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: tomato;\n  }\n`;\n\nexport const InfoContainer = styled.div`\n  position: relative;\n`;\n","import { Suspense } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Loader from 'components/loader/Loader';\nimport {\n  MainContainer,\n  Container,\n  PageLink,\n  LinkList,\n  InfoContainer,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({ movie, setIsLoading }) => {\n  const { date, title, tagline, poster, popularity, genre, overview } = movie;\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const currentLocation = { ...location };\n  const name = currentLocation?.state?.from?.pathname;\n  const search = currentLocation?.state?.from?.search;\n\n  const onComplete = () => setIsLoading(false);\n\n  return (\n    <MainContainer>\n      <PageLink to={backLinkHref}>Go back</PageLink>\n      <Container>\n        <img\n          src={poster}\n          alt={tagline}\n          onLoad={onComplete}\n          onError={onComplete}\n          width=\"400px\"\n          height=\"600px\"\n        />\n        <div>\n          <div>\n            <h1>{title}</h1>\n            <p>{`${date}`}</p>\n          </div>\n          <p>Popularity: {popularity}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genre}</p>\n        </div>\n      </Container>\n      <InfoContainer>\n        <h2>Additional information</h2>\n        <LinkList>\n          <li>\n            <PageLink to=\"cast\" state={{ from: { pathname: name, search } }}>\n              Cast\n            </PageLink>\n          </li>\n          <li>\n            <PageLink to=\"reviews\" state={{ from: { pathname: name, search } }}>\n              Reviews\n            </PageLink>\n          </li>\n        </LinkList>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </InfoContainer>\n    </MainContainer>\n  );\n};\n\nMovieInfo.propTypes = {\n  setIsLoading: PropTypes.func.isRequired,\n  movie: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    tagline: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    popularity: PropTypes.string.isRequired,\n    genre: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieInfo;\n","import ContentLoader from 'react-content-loader';\n\nconst ImageLoader = props => {\n  return (\n    <ContentLoader\n      viewBox=\"0 0 500 500\"\n      height={900}\n      width={1280}\n      backgroundColor=\"#f3f3f3\"\n      foregroundColor=\"#ecebeb\"\n      {...props}\n    >\n      <path d=\"M484.52,64.61H15.65C7.1,64.61.17,71.2.17,79.31V299.82c0,8.12,6.93,14.7,15.48,14.7H484.52c8.55,0,15.48-6.58,15.48-14.7V79.31C500,71.2,493.07,64.61,484.52,64.61Zm-9,204.34c0,11.84-7.14,21.44-15.94,21.44H436.39L359.16,171.52c-7.1-10.92-19.67-11.16-27-.51L258.64,277.94C253.78,285,245.73,286,240,280.2l-79.75-80.62c-6-6.06-14.33-5.7-20,.88L62.34,290.39H40.63c-8.8,0-15.94-9.6-15.94-21.44V110.19c0-11.84,7.14-21.44,15.94-21.44H459.54c8.8,0,15.94,9.6,15.94,21.44Z\" />\n      <ellipse cx=\"120\" cy=\"140\" rx=\"28\" ry=\"28\" />\n    </ContentLoader>\n  );\n};\n\nexport default ImageLoader;\n","import { useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieInfo from 'components/movieInfo/MovieInfo';\nimport Message from 'components/toast/Toast';\n\nimport ImageLoader from 'components/loader/ImageLoader';\nimport useFetch from 'services/hooks';\n\nconst MovieDetails = () => {\n  const { movie, fetchMovie, isLoading, setIsLoading } = useFetch();\n  const { current: fetch } = useRef(fetchMovie);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    fetch({ fetchParams: `movie/${moviesId}`, controller });\n    return () => {\n      controller.abort();\n    };\n  }, [fetch, moviesId]);\n\n  return (\n    <>\n      {isLoading && <ImageLoader />}\n      {movie && <MovieInfo movie={movie} setIsLoading={setIsLoading} />}\n      <Message />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = 'c095a52b18be81f1ee1fe016a8531acc';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchMovies = async ({\n  fetchParams,\n  query = null,\n  controller,\n}) => {\n  const response = await axios(fetchParams, {\n    signal: controller.signal,\n    params: { api_key: API_KEY, query },\n  });\n  return response.data;\n};\n","import { useState } from 'react';\nimport { fetchMovies } from './API';\nimport {\n  normalizeMovies,\n  normalizeMovie,\n  normalizeCast,\n  normalizeReview,\n} from './funcs';\nimport toast from 'react-hot-toast';\n\nconst useFetch = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [contentIsLoading, setContentIsLoading] = useState(false);\n\n  const fetchMoviesList = params => {\n    setIsLoading(true);\n    fetchMovies(params)\n      .then(response => {\n        if (!response.results.length) {\n          setIsLoading(false);\n          toast.error('Nothing found!');\n        }\n        const movies = normalizeMovies(response.results);\n\n        setMovies(movies);\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') {\n          setIsLoading(false);\n          toast.error(error.message);\n        }\n      });\n  };\n\n  const fetchMovie = params => {\n    setIsLoading(true);\n    fetchMovies(params)\n      .then(response => {\n        setMovie(normalizeMovie(response));\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') {\n          setIsLoading(false);\n          toast.error(error.message);\n        }\n      });\n  };\n\n  const fetchCast = params => {\n    setIsLoading(true);\n    fetchMovies(params)\n      .then(response => {\n        setCast(normalizeCast(response.cast));\n        if (!response.cast.length)\n          toast.error(\"We don't have any cast for this movie\");\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') toast.error(error.message);\n      });\n  };\n\n  const fetcReviews = params => {\n    setContentIsLoading(true);\n    fetchMovies(params)\n      .then(response => {\n        setReviews(normalizeReview(response.results));\n        if (!response.results.length)\n          toast.error(\"We don't have any reviews for this movie\");\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') toast.error(error.message);\n      });\n  };\n\n  return {\n    movies,\n    fetchMoviesList,\n    movie,\n    fetchMovie,\n    cast,\n    fetchCast,\n    reviews,\n    fetcReviews,\n    isLoading,\n    setIsLoading,\n    contentIsLoading,\n    setContentIsLoading,\n  };\n};\n\nexport default useFetch;\n","export const normalizeMovies = movies =>\n  movies.map(({ title, id, poster_path, vote_average }) => {\n    const poster = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://placehold.co/500x750/png';\n\n    const averageVote = vote_average && Math.round(vote_average * 10);\n    return { title, id, poster, averageVote };\n  });\n\nexport const normalizeMovie = ({\n  release_date,\n  title,\n  poster_path,\n  popularity,\n  backdrop_path,\n  id,\n  tagline,\n  genres,\n  overview,\n}) => {\n  const date = release_date\n    ? release_date.split('-')[0]\n    : 'No release information';\n\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://placehold.co/500x750/png';\n  const genreList = genres.map(genre => genre.name).join(' ');\n  const genre = genreList.length ? genreList : 'No genre information';\n\n  return {\n    date,\n    title,\n    tagline,\n    id,\n    poster,\n    popularity: popularity + '',\n    backdrop_path,\n    genre,\n    overview,\n  };\n};\n\nexport const normalizeCast = cast =>\n  cast.map(({ id, name, original_name, character, profile_path }) => {\n    const profile = profile_path\n      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n      : 'https://placehold.co/80x100/png';\n    return {\n      id,\n      name,\n      original_name,\n      character,\n      profile,\n    };\n  });\n\nexport const normalizeReview = reviews =>\n  reviews.map(({ author, author_details: { avatar_path }, content, id }) => {\n    let avatar = null;\n    if (avatar_path && !avatar_path?.includes('https')) {\n      avatar = `https://image.tmdb.org/t/p/w500/${avatar_path}`;\n    } else {\n      avatar = 'https://placehold.co/80x80/png';\n    }\n\n    return { author, content, id, avatar };\n  });\n"],"names":["position","reverseOrder","MainContainer","styled","Container","LinkList","PageLink","Link","InfoContainer","movie","setIsLoading","date","title","tagline","poster","popularity","genre","overview","location","useLocation","backLinkHref","state","from","currentLocation","name","pathname","search","onComplete","to","src","alt","onLoad","onError","width","height","Suspense","fallback","Loader","props","viewBox","backgroundColor","foregroundColor","d","cx","cy","rx","ry","useFetch","fetchMovie","isLoading","fetch","useRef","current","moviesId","useParams","useEffect","controller","AbortController","fetchParams","abort","axios","fetchMovies","query","signal","params","api_key","response","data","useState","movies","setMovies","setMovie","cast","setCast","reviews","setReviews","contentIsLoading","setContentIsLoading","fetchMoviesList","then","results","length","toast","map","id","poster_path","vote_average","averageVote","Math","round","normalizeMovies","catch","error","message","release_date","backdrop_path","genres","split","genreList","join","normalizeMovie","fetchCast","original_name","character","profile_path","profile","normalizeCast","fetcReviews","author","avatar_path","author_details","content","avatar","includes","normalizeReview"],"sourceRoot":""}