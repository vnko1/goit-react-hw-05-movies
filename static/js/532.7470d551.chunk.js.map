{"version":3,"file":"static/js/532.7470d551.chunk.js","mappings":"6PAIaA,EAAgBC,EAAAA,GAAAA,IAAH,qIAQbC,EAAYD,EAAAA,GAAAA,IAAH,wDAITE,EAAWF,EAAAA,GAAAA,GAAH,wDAKRG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,wOAgBRK,EAAgBL,EAAAA,GAAAA,IAAH,+C,SCuC1B,EAlEkB,SAAC,GAA6B,IAAD,YAA1BM,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAClBC,EAA8DF,EAA9DE,KAAMC,EAAwDH,EAAxDG,MAAOC,EAAiDJ,EAAjDI,QAASC,EAAwCL,EAAxCK,OAAQC,EAAgCN,EAAhCM,WAAYC,EAAoBP,EAApBO,MAAOC,EAAaR,EAAbQ,SAEnDC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACvCC,GAAe,UAAQL,GACvBM,EAAI,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAiBF,aAApB,iBAAG,EAAwBC,YAA3B,aAAG,EAA8BG,SACrCC,EAAM,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAiBF,aAApB,iBAAG,EAAwBC,YAA3B,aAAG,EAA8BI,OAEvCC,EAAa,kBAAMjB,GAAa,EAAnB,EAEnB,OACE,UAACR,EAAD,YACE,SAACI,EAAD,CAAUsB,GAAIR,EAAd,sBACA,UAAChB,EAAD,YACE,gBACEyB,IAAKf,EACLgB,IAAKjB,EACLkB,OAAQJ,EACRK,QAASL,KAEX,4BACE,4BACE,wBAAKf,KACL,iCAAOD,SAET,wCAAgBI,MAChB,sCACA,uBAAIE,KACJ,oCACA,uBAAID,WAGR,UAACR,EAAD,YACE,oDACA,UAACH,EAAD,YACE,yBACE,SAACC,EAAD,CAAUsB,GAAG,OAAOP,MAAO,CAAEC,KAAM,CAAEG,SAAUD,EAAME,OAAAA,IAArD,qBAIF,yBACE,SAACpB,EAAD,CAAUsB,GAAG,UAAUP,MAAO,CAAEC,KAAM,CAAEG,SAAUD,EAAME,OAAAA,IAAxD,2BAKJ,SAAC,KAAD,SAIP,E,oBC3CD,EAhBoB,SAAAO,GAClB,OACE,UAAC,MAAD,gBACEC,QAAQ,cACRC,OAAQ,IACRC,MAAO,KACPC,gBAAgB,UAChBC,gBAAgB,WACZL,GANN,eAQE,iBAAMM,EAAE,+cACR,oBAASC,GAAG,MAAMC,GAAG,MAAMC,GAAG,KAAKC,GAAG,UAG3C,E,UCcD,EAtBqB,WACnB,OAAuDC,EAAAA,EAAAA,KAA/CnC,EAAR,EAAQA,MAAOoC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,UAAWpC,EAAtC,EAAsCA,aACrBqC,GAAUC,EAAAA,EAAAA,QAAOH,GAA1BI,QACAC,GAAaC,EAAAA,EAAAA,MAAbD,SAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAEvB,OADAP,EAAM,CAAEQ,YAAY,SAAD,OAAWL,GAAYG,WAAAA,IACnC,WACLA,EAAWG,OACZ,CACF,GAAE,CAACT,EAAOG,KAGT,gCACGJ,IAAa,SAAC,EAAD,IACbrC,IAAS,SAAC,EAAD,CAAWA,MAAOA,EAAOC,aAAcA,KACjD,SAAC,IAAD,MAGL,C","sources":["components/movieInfo/MovieInfo.styled.js","components/movieInfo/MovieInfo.jsx","components/loader/ImageLoader.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 30px;\n  padding-top: 20px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 30px;\n`;\nexport const LinkList = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const PageLink = styled(Link)`\n  width: 100px;\n  text-align: center;\n  color: black;\n  padding: 4px 8px;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: tomato;\n  }\n`;\n\nexport const InfoContainer = styled.div`\n  position: relative;\n`;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MainContainer,\n  Container,\n  PageLink,\n  LinkList,\n  InfoContainer,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({ movie, setIsLoading }) => {\n  const { date, title, tagline, poster, popularity, genre, overview } = movie;\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const currentLocation = { ...location };\n  const name = currentLocation?.state?.from?.pathname;\n  const search = currentLocation?.state?.from?.search;\n\n  const onComplete = () => setIsLoading(false);\n\n  return (\n    <MainContainer>\n      <PageLink to={backLinkHref}>Go back</PageLink>\n      <Container>\n        <img\n          src={poster}\n          alt={tagline}\n          onLoad={onComplete}\n          onError={onComplete}\n        />\n        <div>\n          <div>\n            <h1>{title}</h1>\n            <p>{`${date}`}</p>\n          </div>\n          <p>Popularity: {popularity}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genre}</p>\n        </div>\n      </Container>\n      <InfoContainer>\n        <h2>Additional information</h2>\n        <LinkList>\n          <li>\n            <PageLink to=\"cast\" state={{ from: { pathname: name, search } }}>\n              Cast\n            </PageLink>\n          </li>\n          <li>\n            <PageLink to=\"reviews\" state={{ from: { pathname: name, search } }}>\n              Reviews\n            </PageLink>\n          </li>\n        </LinkList>\n        <Outlet />\n      </InfoContainer>\n    </MainContainer>\n  );\n};\n\nMovieInfo.propTypes = {\n  setIsLoading: PropTypes.func.isRequired,\n  movie: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    tagline: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    popularity: PropTypes.string.isRequired,\n    genre: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieInfo;\n","import ContentLoader from 'react-content-loader';\n\nconst ImageLoader = props => {\n  return (\n    <ContentLoader\n      viewBox=\"0 0 500 500\"\n      height={900}\n      width={1280}\n      backgroundColor=\"#f3f3f3\"\n      foregroundColor=\"#ecebeb\"\n      {...props}\n    >\n      <path d=\"M484.52,64.61H15.65C7.1,64.61.17,71.2.17,79.31V299.82c0,8.12,6.93,14.7,15.48,14.7H484.52c8.55,0,15.48-6.58,15.48-14.7V79.31C500,71.2,493.07,64.61,484.52,64.61Zm-9,204.34c0,11.84-7.14,21.44-15.94,21.44H436.39L359.16,171.52c-7.1-10.92-19.67-11.16-27-.51L258.64,277.94C253.78,285,245.73,286,240,280.2l-79.75-80.62c-6-6.06-14.33-5.7-20,.88L62.34,290.39H40.63c-8.8,0-15.94-9.6-15.94-21.44V110.19c0-11.84,7.14-21.44,15.94-21.44H459.54c8.8,0,15.94,9.6,15.94,21.44Z\" />\n      <ellipse cx=\"120\" cy=\"140\" rx=\"28\" ry=\"28\" />\n    </ContentLoader>\n  );\n};\n\nexport default ImageLoader;\n","import { useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieInfo from 'components/movieInfo/MovieInfo';\nimport Message from 'components/toast/Toast';\n\nimport ImageLoader from 'components/loader/ImageLoader';\nimport useFetch from 'services/hooks';\n\nconst MovieDetails = () => {\n  const { movie, fetchMovie, isLoading, setIsLoading } = useFetch();\n  const { current: fetch } = useRef(fetchMovie);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    fetch({ fetchParams: `movie/${moviesId}`, controller });\n    return () => {\n      controller.abort();\n    };\n  }, [fetch, moviesId]);\n\n  return (\n    <>\n      {isLoading && <ImageLoader />}\n      {movie && <MovieInfo movie={movie} setIsLoading={setIsLoading} />}\n      <Message />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MainContainer","styled","Container","LinkList","PageLink","Link","InfoContainer","movie","setIsLoading","date","title","tagline","poster","popularity","genre","overview","location","useLocation","backLinkHref","state","from","currentLocation","name","pathname","search","onComplete","to","src","alt","onLoad","onError","props","viewBox","height","width","backgroundColor","foregroundColor","d","cx","cy","rx","ry","useFetch","fetchMovie","isLoading","fetch","useRef","current","moviesId","useParams","useEffect","controller","AbortController","fetchParams","abort"],"sourceRoot":""}