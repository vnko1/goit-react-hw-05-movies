{"version":3,"file":"static/js/415.b7d4bc10.chunk.js","mappings":"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","sources":["components/movieList/MovieList.styled.js","components/movieList/MoviesList.jsx","components/toast/Toast.jsx","pages/Home.jsx","services/API.js","services/funcs.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport const NavLink = styled(Link)`\n  color: black;\n  font-size: 16px;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    color: tomato;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { NavLink, MovieItem } from './MovieList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ title, id }) => {\n        return (\n          <MovieItem key={id}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </NavLink>\n          </MovieItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { Toaster } from 'react-hot-toast';\n\nconst Message = () => {\n  return <Toaster position=\"top-center\" reverseOrder={false} />;\n};\n\nexport default Message;\n","import { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport MoviesList from 'components/movieList/MoviesList';\nimport Loader from 'components/loader/Loader';\nimport Message from 'components/toast/Toast';\nimport { fetchMovies, normalizeMovies } from 'services';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const params = { fetchParams: 'trending/movie/week', controller };\n\n    fetchMovies(params)\n      .then(response => {\n        const movies = normalizeMovies(response.results);\n        setMovies(movies);\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') toast.error(error.message);\n      })\n      .finally(() => {\n        setShowLoader(false);\n      });\n    return () => {\n      controller.abort();\n    };\n  }, [setMovies, setShowLoader]);\n\n  return (\n    <>\n      {showLoader && <Loader />}\n      {!!movies.length && <MoviesList movies={movies} />}\n      <Message />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nconst API_KEY = 'c095a52b18be81f1ee1fe016a8531acc';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchMovies = async ({\n  fetchParams,\n  query = null,\n  controller,\n}) => {\n  const response = await axios(fetchParams, {\n    signal: controller.signal,\n    params: { api_key: API_KEY, query },\n  });\n  return response.data;\n};\n","export const normalizeMovies = movies =>\n  movies.map(({ title, id }) => ({ title, id }));\n\nexport const normalizeMovie = ({\n  release_date,\n  title,\n  poster_path,\n  popularity,\n  backdrop_path,\n  id,\n  tagline,\n  genres,\n  overview,\n}) => {\n  const date = release_date.split('-');\n\n  const genreList = genres.map(genre => genre.name).join(' ');\n  return {\n    date: date[0],\n    title,\n    tagline,\n    id,\n    poster_path,\n    popularity,\n    backdrop_path,\n    genreList,\n    overview,\n  };\n};\n\nexport const normalizeCast = cast =>\n  cast.map(({ id, name, original_name, character, profile_path }) => ({\n    id,\n    name,\n    original_name,\n    character,\n    profile_path,\n  }));\n\nexport const normalizeReview = reviews =>\n  reviews.map(({ author, content, id }) => ({ author, content, id }));\n"],"names":["MovieItem","styled","NavLink","Link","movies","location","useLocation","map","title","id","to","state","from","position","reverseOrder","useState","setMovies","showLoader","setShowLoader","useEffect","controller","AbortController","params","fetchParams","fetchMovies","then","response","normalizeMovies","results","catch","error","message","toast","finally","abort","length","axios","query","signal","api_key","data","normalizeMovie","release_date","poster_path","popularity","backdrop_path","tagline","genres","overview","date","split","genreList","genre","name","join","normalizeCast","cast","original_name","character","profile_path","normalizeReview","reviews","author","content"],"sourceRoot":""}