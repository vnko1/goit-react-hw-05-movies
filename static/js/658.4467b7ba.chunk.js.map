{"version":3,"file":"static/js/658.4467b7ba.chunk.js","mappings":"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","sources":["components/loader/AuthorsList.jsx","components/reviews/Reviews.styled.js","components/reviews/Reviews.jsx","components/toast/Toast.jsx","services/API.js","services/hooks.js","services/funcs.js"],"sourcesContent":["import ContentLoader from 'react-content-loader'\n\nconst AuthorsList = props => (\n  <ContentLoader viewBox=\"0 0 500 475\" height={475} width={500} {...props}>\n    <circle cx=\"70.2\" cy=\"73.2\" r=\"41.3\" />\n    <rect x=\"129.9\" y=\"29.5\" width=\"125.5\" height=\"17\" />\n    <rect x=\"129.9\" y=\"64.7\" width=\"296\" height=\"17\" />\n    <rect x=\"129.9\" y=\"97.8\" width=\"253.5\" height=\"17\" />\n    <rect x=\"129.9\" y=\"132.3\" width=\"212.5\" height=\"17\" />\n\n    <circle cx=\"70.7\" cy=\"243.5\" r=\"41.3\" />\n    <rect x=\"130.4\" y=\"199.9\" width=\"125.5\" height=\"17\" />\n    <rect x=\"130.4\" y=\"235\" width=\"296\" height=\"17\" />\n    <rect x=\"130.4\" y=\"268.2\" width=\"253.5\" height=\"17\" />\n    <rect x=\"130.4\" y=\"302.6\" width=\"212.5\" height=\"17\" />\n\n    <circle cx=\"70.7\" cy=\"412.7\" r=\"41.3\" />\n    <rect x=\"130.4\" y=\"369\" width=\"125.5\" height=\"17\" />\n    <rect x=\"130.4\" y=\"404.2\" width=\"296\" height=\"17\" />\n    <rect x=\"130.4\" y=\"437.3\" width=\"253.5\" height=\"17\" />\n    <rect x=\"130.4\" y=\"471.8\" width=\"212.5\" height=\"17\" />\n  </ContentLoader>\n)\n\n\n\nexport default AuthorsList","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  opacity: 0;\n  transition: opacity 1000ms;\n  position: absolute;\n  top: 100px;\n  left: 0;\n  &.listLoaded {\n    opacity: 1;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useRef } from 'react';\nimport { after } from 'underscore';\nimport Message from 'components/toast/Toast';\nimport AuthorsList from 'components/loader/AuthorsList';\nimport useFetch from 'services/hooks';\nimport { ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { reviews, fetcReviews, contentIsLoading, setContentIsLoading } =\n    useFetch();\n  const { moviesId } = useParams();\n  const { current: fetch } = useRef(fetcReviews);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    fetch({ fetchParams: `movie/${moviesId}/reviews`, controller });\n\n    return () => {\n      controller.abort();\n    };\n  }, [fetch, moviesId]);\n\n  const onComplete = after(reviews.length, () => {\n    setContentIsLoading(false);\n  });\n\n  return (\n    <>\n      {contentIsLoading && <AuthorsList />}\n      {!!reviews.length && (\n        <ReviewsList className={!contentIsLoading && 'listLoaded'}>\n          {reviews.map(({ author, content, id, avatar }) => (\n            <li key={id}>\n              <img\n                src={avatar}\n                alt={author}\n                onLoad={onComplete}\n                onError={onComplete}\n                width=\"80px\"\n                height=\"80px\"\n              />\n              <h2>Author: {author}</h2>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ReviewsList>\n      )}\n      <Message />\n    </>\n  );\n};\n\nexport default Reviews;\n","import { Toaster } from 'react-hot-toast';\n\nconst Message = () => {\n  return <Toaster position=\"top-center\" reverseOrder={false} />;\n};\n\nexport default Message;\n","import axios from 'axios';\nconst API_KEY = 'c095a52b18be81f1ee1fe016a8531acc';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchMovies = async ({\n  fetchParams,\n  query = null,\n  controller,\n}) => {\n  const response = await axios(fetchParams, {\n    signal: controller.signal,\n    params: { api_key: API_KEY, query },\n  });\n  return response.data;\n};\n","import { useState } from 'react';\nimport { fetchMovies } from './API';\nimport {\n  normalizeMovies,\n  normalizeMovie,\n  normalizeCast,\n  normalizeReview,\n} from './funcs';\nimport toast from 'react-hot-toast';\n\nconst useFetch = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [contentIsLoading, setContentIsLoading] = useState(false);\n\n  const fetchMoviesList = params => {\n    setIsLoading(true);\n    fetchMovies(params)\n      .then(response => {\n        if (!response.results.length) {\n          setIsLoading(false);\n          toast.error('Nothing found!');\n        }\n        const movies = normalizeMovies(response.results);\n\n        setMovies(movies);\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') {\n          setIsLoading(false);\n          toast.error(error.message);\n        }\n      });\n  };\n\n  const fetchMovie = params => {\n    setIsLoading(true);\n    fetchMovies(params)\n      .then(response => {\n        setMovie(normalizeMovie(response));\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') {\n          setIsLoading(false);\n          toast.error(error.message);\n        }\n      });\n  };\n\n  const fetchCast = params => {\n    setIsLoading(true);\n    fetchMovies(params)\n      .then(response => {\n        setCast(normalizeCast(response.cast));\n        if (!response.cast.length)\n          toast.error(\"We don't have any cast for this movie\");\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') toast.error(error.message);\n      });\n  };\n\n  const fetcReviews = params => {\n    setContentIsLoading(true);\n    fetchMovies(params)\n      .then(response => {\n        setReviews(normalizeReview(response.results));\n        if (!response.results.length)\n          toast.error(\"We don't have any reviews for this movie\");\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') toast.error(error.message);\n      });\n  };\n\n  return {\n    movies,\n    fetchMoviesList,\n    movie,\n    fetchMovie,\n    cast,\n    fetchCast,\n    reviews,\n    fetcReviews,\n    isLoading,\n    setIsLoading,\n    contentIsLoading,\n    setContentIsLoading,\n  };\n};\n\nexport default useFetch;\n","export const normalizeMovies = movies =>\n  movies.map(({ title, id, poster_path, vote_average }) => {\n    const poster = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://placehold.co/500x750/png';\n\n    const averageVote = vote_average && Math.round(vote_average * 10);\n    return { title, id, poster, averageVote };\n  });\n\nexport const normalizeMovie = ({\n  release_date,\n  title,\n  poster_path,\n  popularity,\n  backdrop_path,\n  id,\n  tagline,\n  genres,\n  overview,\n}) => {\n  const date = release_date\n    ? release_date.split('-')[0]\n    : 'No release information';\n\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://placehold.co/500x750/png';\n  const genreList = genres.map(genre => genre.name).join(' ');\n  const genre = genreList.length ? genreList : 'No genre information';\n\n  return {\n    date,\n    title,\n    tagline,\n    id,\n    poster,\n    popularity: popularity + '',\n    backdrop_path,\n    genre,\n    overview,\n  };\n};\n\nexport const normalizeCast = cast =>\n  cast.map(({ id, name, original_name, character, profile_path }) => {\n    const profile = profile_path\n      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n      : 'https://placehold.co/80x100/png';\n    return {\n      id,\n      name,\n      original_name,\n      character,\n      profile,\n    };\n  });\n\nexport const normalizeReview = reviews =>\n  reviews.map(({ author, author_details: { avatar_path }, content, id }) => {\n    let avatar = null;\n    if (avatar_path && !avatar_path?.includes('https')) {\n      avatar = `https://image.tmdb.org/t/p/w500/${avatar_path}`;\n    } else {\n      avatar = 'https://placehold.co/80x80/png';\n    }\n\n    return { author, content, id, avatar };\n  });\n"],"names":["props","viewBox","height","width","cx","cy","r","x","y","ReviewsList","styled","useFetch","reviews","fetcReviews","contentIsLoading","setContentIsLoading","moviesId","useParams","fetch","useRef","current","useEffect","controller","AbortController","fetchParams","abort","onComplete","after","length","className","map","author","content","id","avatar","src","alt","onLoad","onError","position","reverseOrder","axios","fetchMovies","query","signal","params","api_key","response","data","useState","movies","setMovies","isLoading","setIsLoading","movie","setMovie","cast","setCast","setReviews","fetchMoviesList","then","results","toast","title","poster_path","vote_average","poster","averageVote","Math","round","normalizeMovies","catch","error","message","fetchMovie","release_date","popularity","backdrop_path","tagline","genres","overview","date","split","genreList","genre","name","join","normalizeMovie","fetchCast","original_name","character","profile_path","profile","normalizeCast","avatar_path","author_details","includes","normalizeReview"],"sourceRoot":""}