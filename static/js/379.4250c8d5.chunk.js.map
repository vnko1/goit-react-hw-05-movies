{"version":3,"file":"static/js/379.4250c8d5.chunk.js","mappings":"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","sources":["components/movieList/MoviesList.jsx","components/searchForm/SearchForm.jsx","pages/Movies.jsx","services/API.js","services/funcs.js","services/hooks.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ title, id }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useState } from 'react';\n\nconst SearchForm = ({ setSearchParams }) => {\n  const [querySearch, setQuerySearch] = useState('');\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    if (!querySearch.trim()) return;\n    setSearchParams({ query: querySearch.trim().toLowerCase() });\n    setQuerySearch('');\n  };\n\n  const onHandleChange = e => {\n    const { value } = e.currentTarget;\n    setQuerySearch(value);\n  };\n\n  return (\n    <form onSubmit={onHandleSubmit}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        value={querySearch}\n        placeholder=\"Search movies\"\n        autoComplete=\"off\"\n        autoFocus\n        onChange={onHandleChange}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/searchForm/SearchForm';\nimport MoviesList from 'components/movieList/MoviesList';\nimport Loader from 'components/loader/Loader';\nimport { fetchMovies, normalizeMovies, useFetch } from 'services';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [response, setResponse] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { errorMessage, setErrorMessage, showLoader, setShowLoader } =\n    useFetch();\n\n  const { query } = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  useEffect(() => {\n    if (!query) return;\n    const controller = new AbortController();\n    const params = {\n      controller,\n      fetchParams: 'search/movie',\n      query,\n    };\n    setErrorMessage(null);\n    setShowLoader(true);\n    fetchMovies(params)\n      .then(response => {\n        setResponse(response.results.length);\n        const movies = normalizeMovies(response.results);\n        setMovies(movies);\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') setErrorMessage(error.message);\n      })\n      .finally(() => {\n        setShowLoader(false);\n      });\n\n    return () => {\n      controller.abort();\n    };\n  }, [query, setErrorMessage, setShowLoader]);\n\n  return (\n    <>\n      <SearchForm setSearchParams={setSearchParams} />\n      {showLoader && <Loader />}\n      {!!movies.length && <MoviesList movies={movies} />}\n      {response === 0 && <p>Nothing found</p>}\n      {!!errorMessage && <p>{errorMessage}</p>}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = 'c095a52b18be81f1ee1fe016a8531acc';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchMovies = async ({\n  fetchParams,\n  query = null,\n  controller,\n}) => {\n  const response = await axios(fetchParams, {\n    signal: controller.signal,\n    params: { api_key: API_KEY, query },\n  });\n  return response.data;\n};\n","export const normalizeMovies = movies =>\n  movies.map(({ title, id }) => ({ title, id }));\n\nexport const normalizeMovie = ({\n  release_date,\n  title,\n  poster_path,\n  popularity,\n  backdrop_path,\n  id,\n  tagline,\n  genres,\n  overview,\n}) => {\n  const date = release_date.split('-');\n\n  const genreList = genres.map(genre => genre.name).join(' ');\n  return {\n    date: date[0],\n    title,\n    tagline,\n    id,\n    poster_path,\n    popularity,\n    backdrop_path,\n    genreList,\n    overview,\n  };\n};\n\nexport const normalizeCast = cast =>\n  cast.map(({ id, name, original_name, character, profile_path }) => ({\n    id,\n    name,\n    original_name,\n    character,\n    profile_path,\n  }));\n\nexport const normalizeReview = reviews =>\n  reviews.map(({ author, content, id }) => ({ author, content, id }));\n","import { useState } from 'react';\n\nexport const useFetch = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [showLoader, setShowLoader] = useState(false);\n\n  return {\n    errorMessage,\n    setErrorMessage,\n    showLoader,\n    setShowLoader,\n  };\n};\n"],"names":["movies","location","useLocation","map","title","id","to","state","from","setSearchParams","useState","querySearch","setQuerySearch","onSubmit","e","preventDefault","trim","query","toLowerCase","type","name","value","placeholder","autoComplete","autoFocus","onChange","currentTarget","setMovies","response","setResponse","useSearchParams","searchParams","useFetch","errorMessage","setErrorMessage","showLoader","setShowLoader","useMemo","Object","fromEntries","useEffect","controller","AbortController","params","fetchParams","fetchMovies","then","results","length","normalizeMovies","catch","error","message","finally","abort","Loader","MoviesList","axios","signal","api_key","data","normalizeMovie","release_date","poster_path","popularity","backdrop_path","tagline","genres","overview","date","split","genreList","genre","join","normalizeCast","cast","original_name","character","profile_path","normalizeReview","reviews","author","content"],"sourceRoot":""}