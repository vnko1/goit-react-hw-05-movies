{"version":3,"file":"static/js/993.38983fe6.chunk.js","mappings":"6MAiCA,UA3Ba,WACX,OAA6DA,EAAAA,EAAAA,KAArDC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,aAAcC,EAAzC,EAAyCA,gBACxBC,GAAUC,EAAAA,EAAAA,QAAOF,GAA1BG,QAUR,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAEvB,OADAL,EAAM,CAAEM,YAAa,sBAAuBF,WAAAA,IACrC,WACLA,EAAWG,OACZ,CACF,GAAE,CAACP,KAGF,gCACGH,IAAa,SAAC,IAAD,MACXD,EAAOY,SACR,SAAC,IAAD,CACEZ,OAAQA,EACRC,UAAWA,EACXC,aAAcA,KAGlB,SAAC,IAAD,MAGL,C","sources":["pages/Home.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport MoviesList from 'components/movieList/MoviesList';\nimport NetflixLoader from 'components/loader/NetflixLoader';\nimport Message from 'components/toast/Toast';\nimport useFetch from 'services/hooks';\n\nconst Home = () => {\n  const { movies, isLoading, setIsLoading, fetchMoviesList } = useFetch();\n  const { current: fetch } = useRef(fetchMoviesList);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    fetch({ fetchParams: 'trending/movie/week', controller });\n    return () => {\n      controller.abort();\n    };\n  }, [fetch]);\n\n  return (\n    <>\n      {isLoading && <NetflixLoader />}\n      {!!movies.length && (\n        <MoviesList\n          movies={movies}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n        />\n      )}\n      <Message />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["useFetch","movies","isLoading","setIsLoading","fetchMoviesList","fetch","useRef","current","useEffect","controller","AbortController","fetchParams","abort","length"],"sourceRoot":""}