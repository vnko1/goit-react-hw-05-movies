{"version":3,"file":"static/js/627.c2317f14.chunk.js","mappings":"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","sources":["components/movieList/MovieList.styled.js","components/movieList/MoviesList.jsx","components/toast/Toast.jsx","components/searchForm/SearchForm.styled.js","components/searchForm/SearchForm.jsx","pages/Movies.jsx","services/API.js","services/funcs.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport const NavLink = styled(Link)`\n  color: black;\n  font-size: 16px;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    color: tomato;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { NavLink, MovieItem } from './MovieList.styled';\nimport { shape } from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ title, id }) => {\n        return (\n          <MovieItem key={id}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </NavLink>\n          </MovieItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import { Toaster } from 'react-hot-toast';\n\nconst Message = () => {\n  return <Toaster position=\"top-center\" reverseOrder={false} />;\n};\n\nexport default Message;\n","import styled from 'styled-components';\n\nexport const MovieSearchForm = styled.form`\n  width: 400px;\n  padding-top: 20px;\n  margin: 0 auto;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 4px 8px;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  padding: 4px 8px;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: tomato;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieSearchForm, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = ({ setSearchParams }) => {\n  const [querySearch, setQuerySearch] = useState('');\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    if (!querySearch.trim()) return;\n    setSearchParams({ query: querySearch.trim().toLowerCase() });\n    setQuerySearch('');\n  };\n\n  const onHandleChange = e => {\n    const { value } = e.currentTarget;\n    setQuerySearch(value);\n  };\n\n  return (\n    <MovieSearchForm onSubmit={onHandleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        value={querySearch}\n        placeholder=\"Search movies\"\n        autoComplete=\"off\"\n        autoFocus\n        onChange={onHandleChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </MovieSearchForm>\n  );\n};\n\nSearchForm.propTypes = { setSearchParams: PropTypes.func.isRequired };\n\nexport default SearchForm;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport SearchForm from 'components/searchForm/SearchForm';\nimport MoviesList from 'components/movieList/MoviesList';\nimport Message from 'components/toast/Toast';\nimport Loader from 'components/loader/Loader';\nimport { fetchMovies, normalizeMovies } from 'services';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [showLoader, setShowLoader] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const { query } = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  useEffect(() => {\n    if (!query) return;\n    const controller = new AbortController();\n    const params = {\n      controller,\n      fetchParams: 'search/movie',\n      query,\n    };\n\n    setShowLoader(true);\n    fetchMovies(params)\n      .then(response => {\n        if (!response.results.length) toast.error('Nothing found!');\n        const movies = normalizeMovies(response.results);\n        setMovies(movies);\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') toast.error(error.message);\n      })\n      .finally(() => {\n        setShowLoader(false);\n      });\n\n    return () => {\n      controller.abort();\n    };\n  }, [query, setShowLoader]);\n\n  return (\n    <>\n      <SearchForm setSearchParams={setSearchParams} />\n      {showLoader && <Loader />}\n      {!!movies.length && <MoviesList movies={movies} />}\n      <Message />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = 'c095a52b18be81f1ee1fe016a8531acc';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchMovies = async ({\n  fetchParams,\n  query = null,\n  controller,\n}) => {\n  const response = await axios(fetchParams, {\n    signal: controller.signal,\n    params: { api_key: API_KEY, query },\n  });\n  return response.data;\n};\n","export const normalizeMovies = movies =>\n  movies.map(({ title, id }) => ({ title, id }));\n\nexport const normalizeMovie = ({\n  release_date,\n  title,\n  poster_path,\n  popularity,\n  backdrop_path,\n  id,\n  tagline,\n  genres,\n  overview,\n}) => {\n  const date = release_date\n    ? release_date.split('-')[0]\n    : 'No release information';\n\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://placehold.co/500x750/png';\n  const genreList = genres.map(genre => genre.name).join(' ');\n  const genre = genreList.length ? genreList : 'No genre information';\n\n  return {\n    date,\n    title,\n    tagline,\n    id,\n    poster,\n    popularity: popularity + '',\n    backdrop_path,\n    genre,\n    overview,\n  };\n};\n\nexport const normalizeCast = cast =>\n  cast.map(({ id, name, original_name, character, profile_path }) => ({\n    id,\n    name,\n    original_name,\n    character,\n    profile_path,\n  }));\n\nexport const normalizeReview = reviews =>\n  reviews.map(({ author, content, id }) => ({ author, content, id }));\n"],"names":["MovieItem","styled","NavLink","Link","movies","location","useLocation","map","title","id","to","state","from","position","reverseOrder","MovieSearchForm","Input","Button","setSearchParams","useState","querySearch","setQuerySearch","onSubmit","e","preventDefault","trim","query","toLowerCase","type","name","value","placeholder","autoComplete","autoFocus","onChange","currentTarget","setMovies","showLoader","setShowLoader","useSearchParams","searchParams","useMemo","Object","fromEntries","useEffect","controller","AbortController","params","fetchParams","fetchMovies","then","response","results","length","toast","normalizeMovies","catch","error","message","finally","abort","Loader","MoviesList","axios","signal","api_key","data","normalizeMovie","release_date","poster_path","popularity","backdrop_path","tagline","genres","overview","date","split","poster","genreList","genre","join","normalizeCast","cast","original_name","character","profile_path","normalizeReview","reviews","author","content"],"sourceRoot":""}