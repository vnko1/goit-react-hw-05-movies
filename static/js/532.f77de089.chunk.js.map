{"version":3,"file":"static/js/532.f77de089.chunk.js","mappings":"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","sources":["components/toast/Toast.jsx","components/movieInfo/MovieInfo.styled.js","components/movieInfo/MovieInfo.jsx","components/loader/ImageLoader.jsx","pages/MovieDetails.jsx","services/API.js","services/constants.js","services/hooks.js","services/funcs.js"],"sourcesContent":["import { Toaster } from 'react-hot-toast';\n\nconst Message = () => {\n  return <Toaster position=\"top-center\" reverseOrder={false} />;\n};\n\nexport default Message;\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 12px;\n  padding-top: 10px;\n  opacity: 0;\n  transition: opacity 1500ms;\n\n  &.loaded {\n    opacity: 1;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 10px;\n`;\nexport const LinkList = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const PageLink = styled(Link)`\n  width: 100px;\n  margin: 0;\n  text-align: center;\n  color: black;\n  padding: 4px 8px;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: tomato;\n  }\n`;\n","import { Suspense, useRef } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  MainContainer,\n  Container,\n  PageLink,\n  LinkList,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({ movie, setContentIsLoading, contentIsLoading }) => {\n  const { date, title, tagline, poster, popularity, genre, overview } = movie;\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const onComplete = () => setContentIsLoading(false);\n\n  return (\n    <MainContainer className={!contentIsLoading && 'loaded'}>\n      <PageLink to={backLinkHref.current}>Go back</PageLink>\n      <Container>\n        <img\n          src={poster}\n          alt={tagline}\n          onLoad={onComplete}\n          onError={onComplete}\n          width=\"400\"\n          height=\"600\"\n        />\n        <div>\n          <div>\n            <h1>{title}</h1>\n            <p>{`${date}`}</p>\n          </div>\n          <p>Popularity: {popularity}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genre}</p>\n        </div>\n      </Container>\n      <h2>Additional information</h2>\n      <LinkList>\n        <li>\n          <PageLink to=\"cast\">Cast</PageLink>\n        </li>\n        <li>\n          <PageLink to=\"reviews\">Reviews</PageLink>\n        </li>\n      </LinkList>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </MainContainer>\n  );\n};\n\nMovieInfo.propTypes = {\n  setContentIsLoading: PropTypes.func.isRequired,\n  contentIsLoading: PropTypes.bool.isRequired,\n  movie: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    tagline: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    popularity: PropTypes.string.isRequired,\n    genre: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieInfo;\n","import ContentLoader from 'react-content-loader';\n\nconst ImageLoader = props => {\n  return (\n    <ContentLoader\n      viewBox=\"0 0 500 500\"\n      height={900}\n      width={1280}\n      backgroundColor=\"#f3f3f3\"\n      foregroundColor=\"#ecebeb\"\n      {...props}\n    >\n      <path d=\"M484.52,64.61H15.65C7.1,64.61.17,71.2.17,79.31V299.82c0,8.12,6.93,14.7,15.48,14.7H484.52c8.55,0,15.48-6.58,15.48-14.7V79.31C500,71.2,493.07,64.61,484.52,64.61Zm-9,204.34c0,11.84-7.14,21.44-15.94,21.44H436.39L359.16,171.52c-7.1-10.92-19.67-11.16-27-.51L258.64,277.94C253.78,285,245.73,286,240,280.2l-79.75-80.62c-6-6.06-14.33-5.7-20,.88L62.34,290.39H40.63c-8.8,0-15.94-9.6-15.94-21.44V110.19c0-11.84,7.14-21.44,15.94-21.44H459.54c8.8,0,15.94,9.6,15.94,21.44Z\" />\n      <ellipse cx=\"120\" cy=\"140\" rx=\"28\" ry=\"28\" />\n    </ContentLoader>\n  );\n};\n\nexport default ImageLoader;\n","import { useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieInfo from 'components/movieInfo/MovieInfo';\nimport Message from 'components/toast/Toast';\nimport ImageLoader from 'components/loader/ImageLoader';\nimport useFetch from 'services/hooks';\nimport { STATUS } from 'services';\n\nconst MovieDetails = () => {\n  const { movie, fetchMovie, status, contentIsLoading, setContentIsLoading } =\n    useFetch();\n  const { current: fetch } = useRef(fetchMovie);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    fetch({ fetchParams: `movie/${moviesId}`, controller });\n    return () => {\n      controller.abort();\n    };\n  }, [fetch, moviesId]);\n\n  return (\n    <>\n      {contentIsLoading && <ImageLoader />}\n      {status === STATUS.resolved && (\n        <MovieInfo\n          movie={movie}\n          setContentIsLoading={setContentIsLoading}\n          contentIsLoading={contentIsLoading}\n        />\n      )}\n      <Message />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = 'c095a52b18be81f1ee1fe016a8531acc';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchMovies = async ({\n  fetchParams,\n  query = null,\n  controller,\n}) => {\n  const response = await axios(fetchParams, {\n    signal: controller.signal,\n    params: { api_key: API_KEY, query },\n  });\n  return response.data;\n};\n","export const STATUS = {\n  idle: 'IDLE',\n  pending: 'PENDING',\n  resolved: 'RESOLVED',\n  error: 'ERROR',\n};\n","import { useState } from 'react';\nimport { fetchMovies } from './API';\nimport {\n  normalizeMovies,\n  normalizeMovie,\n  normalizeCast,\n  normalizeReview,\n} from './funcs';\nimport { STATUS } from './constants';\nimport toast from 'react-hot-toast';\n\nconst useFetch = () => {\n  const [movies, setMovies] = useState([]);\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [contentIsLoading, setContentIsLoading] = useState(false);\n  const [status, setStatus] = useState(STATUS.idle);\n\n  const fetchMoviesList = params => {\n    setStatus(STATUS.pending);\n    setContentIsLoading(true);\n    fetchMovies(params)\n      .then(response => {\n        if (response.results.length === 0) {\n          setStatus(STATUS.resolved);\n          setContentIsLoading(false);\n          return toast.error('Nothing found!');\n        }\n        const movies = normalizeMovies(response.results);\n        setMovies(movies);\n        setStatus(STATUS.resolved);\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') {\n          setStatus(STATUS.error);\n          setContentIsLoading(false);\n          toast.error(error.message);\n        }\n      });\n  };\n\n  const fetchMovie = params => {\n    setStatus(STATUS.pending);\n    setContentIsLoading(true);\n    fetchMovies(params)\n      .then(response => {\n        setMovie(normalizeMovie(response));\n        setStatus(STATUS.resolved);\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') {\n          setStatus(STATUS.error);\n          setContentIsLoading(false);\n          toast.error(error.message);\n        }\n      });\n  };\n\n  const fetchCast = params => {\n    setStatus(STATUS.pending);\n    setContentIsLoading(true);\n    fetchMovies(params)\n      .then(response => {\n        if (response.cast.length === 0) {\n          setStatus(STATUS.resolved);\n          setContentIsLoading(false);\n          return toast.error(\"We don't have any cast for this movie\");\n        }\n        setCast(normalizeCast(response.cast));\n        setStatus(STATUS.resolved);\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') {\n          setStatus(STATUS.error);\n          setContentIsLoading(false);\n          toast.error(error.message);\n        }\n      });\n  };\n\n  const fetcReviews = params => {\n    setStatus(STATUS.pending);\n    setContentIsLoading(true);\n    fetchMovies(params)\n      .then(response => {\n        if (response.results.length === 0) {\n          setContentIsLoading(false);\n          setStatus(STATUS.resolved);\n          return toast.error(\"We don't have any reviews for this movie\");\n        }\n        setReviews(normalizeReview(response.results));\n        setStatus(STATUS.resolved);\n      })\n      .catch(error => {\n        if (error.message !== 'canceled') {\n          setContentIsLoading(false);\n          setStatus(STATUS.error);\n          toast.error(error.message);\n        }\n      });\n  };\n\n  return {\n    movies,\n    fetchMoviesList,\n    movie,\n    fetchMovie,\n    cast,\n    fetchCast,\n    reviews,\n    fetcReviews,\n    contentIsLoading,\n    setContentIsLoading,\n    status,\n    setStatus,\n  };\n};\n\nexport default useFetch;\n","export const normalizeMovies = movies =>\n  movies.map(({ title, id, poster_path, vote_average }) => {\n    const poster = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://placehold.co/500x750/png';\n\n    const averageVote = vote_average && Math.round(vote_average * 10);\n    return { title, id, poster, averageVote };\n  });\n\nexport const normalizeMovie = ({\n  release_date,\n  title,\n  poster_path,\n  popularity,\n  backdrop_path,\n  id,\n  tagline,\n  genres,\n  overview,\n}) => {\n  const date = release_date\n    ? release_date.split('-')[0]\n    : 'No release information';\n\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://placehold.co/500x750/png';\n  const genreList = genres.map(genre => genre.name).join(' ');\n  const genre = genreList.length ? genreList : 'No genre information';\n\n  return {\n    date,\n    title,\n    tagline,\n    id,\n    poster,\n    popularity: popularity + '',\n    backdrop_path,\n    genre,\n    overview,\n  };\n};\n\nexport const normalizeCast = cast =>\n  cast.map(({ id, name, original_name, character, profile_path }) => {\n    const profile = profile_path\n      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n      : 'https://placehold.co/80x100/png';\n    return {\n      id,\n      name,\n      original_name,\n      character,\n      profile,\n    };\n  });\n\nexport const normalizeReview = reviews =>\n  reviews.map(({ author, author_details: { avatar_path }, content, id }) => {\n    let avatar = null;\n    if (avatar_path && !avatar_path?.includes('https')) {\n      avatar = `https://image.tmdb.org/t/p/w500/${avatar_path}`;\n    } else {\n      avatar = 'https://placehold.co/80x80/png';\n    }\n\n    return { author, content, id, avatar };\n  });\n"],"names":["position","reverseOrder","MainContainer","styled","Container","LinkList","PageLink","Link","movie","setContentIsLoading","contentIsLoading","date","title","tagline","poster","popularity","genre","overview","location","useLocation","backLinkHref","useRef","state","from","onComplete","className","to","current","src","alt","onLoad","onError","width","height","Suspense","props","viewBox","backgroundColor","foregroundColor","d","cx","cy","rx","ry","useFetch","fetchMovie","status","fetch","moviesId","useParams","useEffect","controller","AbortController","fetchParams","abort","STATUS","axios","fetchMovies","query","signal","params","api_key","response","data","idle","pending","resolved","error","useState","movies","setMovies","setMovie","cast","setCast","reviews","setReviews","setStatus","fetchMoviesList","then","results","length","toast","map","id","poster_path","vote_average","averageVote","Math","round","normalizeMovies","catch","message","release_date","backdrop_path","genres","split","genreList","name","join","normalizeMovie","fetchCast","original_name","character","profile_path","profile","normalizeCast","fetcReviews","author","avatar_path","author_details","content","avatar","includes","normalizeReview"],"sourceRoot":""}